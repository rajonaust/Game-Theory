// MinMax Algorithm
// Given N numbers and a set ( arr ) of K moves . Each move a player have to select a number ( x -> arr ) from the set and perform ( N-x ) if ( N-x>=0 ) .
// Player 1 turns first than player 2 and continue by altering their turns . Player who does not make a valid move , lose the the match .

#include <iostream>
using namespace std;

int N , K , arr[50] ;
bool game[1000000+10] ;

bool solve()
{
    game[0] = false ; // Player 1 lose if number is 0 .
    for(int i=1;i<=N;i++)
    {
        for(int j=1;j<=K;j++)
        {
            if(i-arr[j]>=0&&game[i-arr[j]]==false) game[i] = true ;
        }
    }
    return game[N] ;
}

int main()
{
    cin >> N >> K ;
    for(int i=1;i<=K;i++) cin >> arr[i] ;

    if(solve()) cout << "Player 1\n" << endl ;
    else cout << "Player 2\n" << endl ;
    return 0;
}

/*
10 2
3 5
*/
/*
Player 2
*/

/*
11 2
1 3
*/
/*
Player 1
*/
